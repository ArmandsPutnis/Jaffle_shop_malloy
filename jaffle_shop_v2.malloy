source: customers is duckdb.table('raw_customers.csv') extend {
    primary_key: id
    dimension: full_name is concat(first_name, ' ', last_name)
      
}

source: orders is duckdb.table('raw_orders.csv') extend {
    primary_key: id
    join_one: customers with user_id
}

source: payments is duckdb.table('raw_payments.csv') extend {
    primary_key: id
    dimension: amount_dollars is amount / 100   
    join_one: orders with order_id
}

source: final is payments extend {
  measure: 
      first_order is min(orders.order_date)
      most_recent_order is max(orders.order_date)
      number_of_orders is count(orders.id)
      # currency
      total_amount is amount_dollars.sum()
      # currency
      customer_lifetime_value is total_amount {where: orders.status != 'return_pending' and orders.status != 'returned' } 

view: customer_view is {
    group_by: 
      orders.customers.id
      orders.customers.full_name --< full_name problem here
    aggregate: 
      first_order
      most_recent_order
      number_of_orders
      customer_lifetime_value
    order_by: customer_lifetime_value desc
    }

view: order_view is {
    group_by: 
    order_id is orders.id
    name is orders.customers.full_name
    order_date is orders.order_date
    # list_detail
    nest: payment_method_type is {
        group_by: method is payment_method
        aggregate: amount is total_amount
    }
    aggregate: total_amount
 }

}
-- here is the result when i copy the query to clipboard from the htm preview
run: final -> {
where:
		orders.customers.id = 51,
		concat(first_name, ' ', last_name) = "Howard R."
} + { select: * }